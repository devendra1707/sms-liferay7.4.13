/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.armantec.lms.common.util.services.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.GroupedModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedAuditedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Translation service. Represents a row in the &quot;lms_common_Translation&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.armantec.lms.common.util.services.model.impl.TranslationModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.armantec.lms.common.util.services.model.impl.TranslationImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Translation
 * @generated
 */
@ProviderType
public interface TranslationModel
	extends BaseModel<Translation>, GroupedModel, ShardedModel,
			StagedAuditedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a translation model instance should use the {@link Translation} interface instead.
	 */

	/**
	 * Returns the primary key of this translation.
	 *
	 * @return the primary key of this translation
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this translation.
	 *
	 * @param primaryKey the primary key of this translation
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this translation.
	 *
	 * @return the uuid of this translation
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this translation.
	 *
	 * @param uuid the uuid of this translation
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the ID of this translation.
	 *
	 * @return the ID of this translation
	 */
	public long getId();

	/**
	 * Sets the ID of this translation.
	 *
	 * @param id the ID of this translation
	 */
	public void setId(long id);

	/**
	 * Returns the group ID of this translation.
	 *
	 * @return the group ID of this translation
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this translation.
	 *
	 * @param groupId the group ID of this translation
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this translation.
	 *
	 * @return the company ID of this translation
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this translation.
	 *
	 * @param companyId the company ID of this translation
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this translation.
	 *
	 * @return the user ID of this translation
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this translation.
	 *
	 * @param userId the user ID of this translation
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this translation.
	 *
	 * @return the user uuid of this translation
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this translation.
	 *
	 * @param userUuid the user uuid of this translation
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this translation.
	 *
	 * @return the user name of this translation
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this translation.
	 *
	 * @param userName the user name of this translation
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this translation.
	 *
	 * @return the create date of this translation
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this translation.
	 *
	 * @param createDate the create date of this translation
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this translation.
	 *
	 * @return the modified date of this translation
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this translation.
	 *
	 * @param modifiedDate the modified date of this translation
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the modified by of this translation.
	 *
	 * @return the modified by of this translation
	 */
	public long getModifiedBy();

	/**
	 * Sets the modified by of this translation.
	 *
	 * @param modifiedBy the modified by of this translation
	 */
	public void setModifiedBy(long modifiedBy);

	/**
	 * Returns the modified by name of this translation.
	 *
	 * @return the modified by name of this translation
	 */
	@AutoEscape
	public String getModifiedByName();

	/**
	 * Sets the modified by name of this translation.
	 *
	 * @param modifiedByName the modified by name of this translation
	 */
	public void setModifiedByName(String modifiedByName);

	/**
	 * Returns the deleted of this translation.
	 *
	 * @return the deleted of this translation
	 */
	public boolean getDeleted();

	/**
	 * Returns <code>true</code> if this translation is deleted.
	 *
	 * @return <code>true</code> if this translation is deleted; <code>false</code> otherwise
	 */
	public boolean isDeleted();

	/**
	 * Sets whether this translation is deleted.
	 *
	 * @param deleted the deleted of this translation
	 */
	public void setDeleted(boolean deleted);

	/**
	 * Returns the language code of this translation.
	 *
	 * @return the language code of this translation
	 */
	@AutoEscape
	public String getLanguageCode();

	/**
	 * Sets the language code of this translation.
	 *
	 * @param languageCode the language code of this translation
	 */
	public void setLanguageCode(String languageCode);

	/**
	 * Returns the model name of this translation.
	 *
	 * @return the model name of this translation
	 */
	@AutoEscape
	public String getModelName();

	/**
	 * Sets the model name of this translation.
	 *
	 * @param modelName the model name of this translation
	 */
	public void setModelName(String modelName);

	/**
	 * Returns the column name of this translation.
	 *
	 * @return the column name of this translation
	 */
	@AutoEscape
	public String getColumnName();

	/**
	 * Sets the column name of this translation.
	 *
	 * @param columnName the column name of this translation
	 */
	public void setColumnName(String columnName);

	/**
	 * Returns the text of this translation.
	 *
	 * @return the text of this translation
	 */
	@AutoEscape
	public String getText();

	/**
	 * Sets the text of this translation.
	 *
	 * @param text the text of this translation
	 */
	public void setText(String text);

	/**
	 * Returns the record ID of this translation.
	 *
	 * @return the record ID of this translation
	 */
	public long getRecordId();

	/**
	 * Sets the record ID of this translation.
	 *
	 * @param recordId the record ID of this translation
	 */
	public void setRecordId(long recordId);

	@Override
	public Translation cloneWithOriginalValues();

}